#!/usr/bin/python3
import os
import sys
import magic
from mutagen.easyid3 import EasyID3
from mutagen.mp3 import MP3
from mutagen.mp4 import MP4
from mutagen.oggvorbis import OggVorbis
from mutagen.flac import FLAC

ms = magic.open(magic.MAGIC_NONE)
ms.load()

if (len(sys.argv) < 3):
	print("Usage: mutl source-dir dest-dir\n    (dest dir will be created so must not exist yet)\n")
	exit()

sourceDir = sys.argv[1]
destDir = sys.argv[2]
if (sourceDir[-1] != '/'):
	sourceDir += '/'
if (destDir[-1] != '/'):
	destDir += '/'
sourceDirLen = len(sourceDir)

def mkdirhier(dir):
	try:
		os.makedirs(dir)
	except OSError as e:
		if e.errno != 17: raise e

def worse(audio1, audio2):
	"""return whichever is "worse" of these two, or False if they are incomparable"""
	if "artist" in audio1 and "title" in audio1 and "artist" in audio2 and "title" in audio2 and audio1["artist"] == audio2["artist"] and audio1["title"] == audio2["title"]:
		if audio1.__dict__['type'] == "flac":
			return audio2;
		elif audio2.__dict__['type'] == "flac":
			return audio1;
		elif audio1.__dict__['bitrate'] > audio2.__dict__['bitrate']:
			return audio2;
		elif audio2.__dict__['bitrate'] > audio1.__dict__['bitrate']:
			return audio1;
		elif audio1.__dict__['type'] == "ogg":
			return audio2;
		elif audio2.__dict__['type'] == "ogg":
			return audio1;
		elif audio1.__dict__['type'] == "aac":
			return audio2;
		elif audio2.__dict__['type'] == "aac":
			return audio1;
	return False

def countSlashes(str):
	return str.count('/')

def deduplicate(seq):
    seen = set()
    seen_add = seen.add
    return [ x for x in seq if not (x in seen or seen_add(x))]

filesThisDir = []
thisDir = ""
for root, dirs, files in os.walk(sourceDir, topdown=False):
	for name in files:
		if thisDir:
			#~ print("dir", thisDir.decode("utf-8", "surrogateescape"))
			toRemove = []
			for i, audio in enumerate(filesThisDir):
#				 print("   ", i, audio, audio.__dict__['type'])
				remaining = filesThisDir[i+1:]
				for j, other in enumerate(remaining):
#						print("      ", j, other, other.__dict__['type'])
					theWorse = worse(audio, other)
					if theWorse:
#							print("         the worse:", theWorse.__dict__['type'], theWorse.__dict__['path'], "at idx", j + i)
						toRemove.append(j + i + 1)
			toRemove = deduplicate(sorted(toRemove))
			toRemove.reverse()
			#~ print(toRemove, "from", len(filesThisDir), filesThisDir)
			for i in toRemove:
#					print("         removing worse file: ", filesThisDir[i].__dict__['type'], filesThisDir[i].__dict__['path'])
				del filesThisDir[i]
			subpath = thisDir[sourceDirLen:]
			for i, audio in enumerate(filesThisDir):
#				 print("   ", i, audio, audio.__dict__['type'])
				destPath = destDir + subpath + "/"
				print("   ln ", destPath + audio.__dict__['filename'], " -> ", audio.__dict__['path'])
				mkdirhier(destPath)
				os.symlink("../" * countSlashes(audio.__dict__['path']) + audio.__dict__['path'], destPath + audio.__dict__["filename"])
		filesThisDir = []
		thisDir = root

		path = os.path.join(root, name)
		#~ print("file", path)
		try:
			type = ms.file(path).lower()
			#~ print(path, "type", type)
			if type.find("id3") >= 0:
				audio = EasyID3(path)
	# print(audio.keys())
				try:
					mpinfo = MP3(path)
				except:
					continue
				audio.__dict__['bitrate'] = mpinfo.info.bitrate
				audio.__dict__['type'] = "mp3"
				audio.__dict__['path'] = path
				audio.__dict__['filename'] = name
#				 print(audio)
#				 audio.pprint()
	#			if "artist" in audio and "title" in audio:
	#				print("mp3", audio["artist"], audio["title"], mpinfo.bitrate)
	#			print(root, " => ",  name)
			elif type.find("aac") >= 0:
				audio = MP4(path)
				audio['title'] = audio["©nam"]
				audio['artist'] = audio["©ART"]
				audio.__dict__['type'] = "aac"
				audio.__dict__['bitrate'] = audio.info.bitrate
				audio.__dict__['path'] = path
				audio.__dict__['filename'] = name
#				 print(audio)
			elif type.find("ogg") >= 0:
				audio = OggVorbis(path)
				audio.__dict__['type'] = "ogg"
				audio.__dict__['bitrate'] = audio.info.bitrate
				audio.__dict__['path'] = path
				audio.__dict__['filename'] = name
	#			if "artist" in audio and "title" in audio:
	#				print("ogg", audio["artist"], audio["title"], audio.info.bitrate)
			elif type.find("flac") >= 0:
				audio = FLAC(path)
				audio.__dict__['type'] = "flac"
	#			audio.__dict__['sample_rate'] = audio.info.sample_rate
				audio.__dict__['path'] = path
				audio.__dict__['filename'] = name
			else:
				continue
			filesThisDir.append(audio)
		except Exception as e:
			print("caught", e)
			continue
